# Work in progress
- hosts: tag_role_kube_masternode
  gather_facts: false
  tasks:
# Install helm
    - name: Download helm sources
      get_url: 
        url: https://storage.googleapis.com/kubernetes-helm/helm-v2.9.1-linux-amd64.tar.gz
        dest: /tmp

    - name: Extract helm into /tmp
      unarchive:
        src: /tmp/helm-v2.9.1-linux-amd64.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Copy helm binary to /usr/local/bin
      copy:
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin/helm
        owner: root
        group: root
        mode: 0755

- hosts: tag_role_kube_masternode
  become: yes
  become_user: ubuntu
  gather_facts: false
  tasks:
    - name: Initialize helm
      shell: helm init

# Tiller
    - name: Create service account for tiller
      shell: kubectl create serviceaccount --namespace kube-system tiller

    - name: Create cluster role binding for tiller
      shell: kubectl create clusterrolebinding tiller-cluster-role --clusterrole=cluster-admin --serviceaccount=kube-system:tiller

    - name: Configure tiller step 1
      shell: kubectl patch deploy --namespace kube-system tiller-deploy --patch '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'

    - name: Configure tiller step 2
      shell: kubectl -n kube-system patch deployment tiller-deploy -p '{"spec":{"template":{"spec":{"automountServiceAccountToken":true}}}}'


# Get DSSC
    - name: Pull smartcheck helm
      git:
        repo: 'https://github.com/deep-security/smartcheck-helm'
        dest: ~ 

  # Overrides
    - name: Create overrides file
      copy:
        dest: "~/smartcheck-helm/overrides.yaml"
        content: |
          service:
            type: ClusterIP
          persistence:
            enabled: false

    - name: Create storage gp2 storage class definition
      copy:
        dest: "~/smartcheck-helm/gp2-storage-class.yaml"
        content: |
          kind: StorageClass
          apiVersion: storage.k8s.io/v1
          metadata:
            name: gp2
          provisioner: kubernetes.io/aws-ebs
          parameters:
            type: gp2
          reclaimPolicy: Retain
          mountOptions:
            - debug

    - name: Create storage class
      shell: kubectl create -f ~/smartcheck-helm/gp2-storage-class.yaml

# Install DSSC
    - name: Install DSSC
      shell: helm install --namespace smartcheck --set persistence.storageClassName=gp2 --set auth.masterPassword=trendmicro --set activationCode=DK-96KU-2WZD8-MEEVG-RTCJL-3J2Y3-WDTUR --name deepsecurity-smartcheck --values overrides.yaml .

#export POD_NAME=$(kubectl get pods --namespace smartcheck -l "service=proxy,release=deepsecurity-smartcheck" -o jsonpath="{.items[0].metadata.name}")
#kubectl port-forward --namespace smartcheck $POD_NAME 8443:8443
#echo Application URL: https://127.0.0.1:8443
#echo Username: $(kubectl get --namespace smartcheck secrets -o jsonpath='{.data.userName }' deepsecurity-smartcheck-auth | base64 --decode)
#echo Password: $(kubectl get --namespace smartcheck secrets -o jsonpath='{.data.password }' deepsecurity-smartcheck-auth | base64 --decode)
